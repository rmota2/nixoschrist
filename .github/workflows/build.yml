name: Build NixOS SD Card Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Nix
      uses: cachix/install-nix-action@v24
      with:
        nix_path: nixpkgs=channel:nixos-25.05
        extra_nix_config: |
          experimental-features = nix-command flakes
          # Allow cross-compilation
          extra-platforms = aarch64-linux
    
    # Set up QEMU for ARM64 emulation
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64
    
    # Set up binfmt for transparent ARM64 execution
    - name: Set up binfmt
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    
    # Install Nix binary cache (speeds up builds)
    - name: Setup Cachix
      uses: cachix/cachix-action@v12
      with:
        name: nix-community
        skipPush: true
    
    # Build the SD card image
    - name: Build SD Card Image
      run: |
        # Note: sdImage with capital I
        nix build .#packages.aarch64-linux.sdImage \
          --extra-platforms aarch64-linux \
          --option system-features "nixos-test benchmark big-parallel kvm" \
          -L
        
        # The result is a symlink, follow it to get the actual image
        echo "Build complete. Contents:"
        ls -la result/sd-image/
        
        # Find the actual image file
        IMAGE_PATH=$(find result -name "*.img*" -type f | head -n1)
        echo "Found image at: $IMAGE_PATH"
        echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_ENV
    
    # Compress if not already compressed
    - name: Prepare Image for Upload
      run: |
        if [[ "$IMAGE_PATH" == *.img ]]; then
          echo "Compressing image..."
          zstd -3 "$IMAGE_PATH" -o nixos-pi.img.zst
          FINAL_IMAGE="nixos-pi.img.zst"
        else
          echo "Image already compressed"
          cp "$IMAGE_PATH" nixos-pi.img.zst
          FINAL_IMAGE="nixos-pi.img.zst"
        fi
        
        # Show final size
        ls -lh nixos-pi.img.zst
        echo "FINAL_IMAGE=$FINAL_IMAGE" >> $GITHUB_ENV
    
    # Upload the image as an artifact
    - name: Upload Image Artifact
      uses: actions/upload-artifact@v4
      with:
        name: nixos-pi-sd-image-${{ github.sha }}
        path: nixos-pi.img.zst
        retention-days: 7
    
    # Create a release if this is a tag
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: nixos-pi.img.zst
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}